set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)
# if not set, look fot Qt5 directory
if(NOT CMAKE_PREFIX_PATH)
    if (UNIX)
        if (APPLE)
            if (EXISTS /usr/local/Cellar/qt/5.15.0/)
                set(CMAKE_PREFIX_PATH /usr/local/Cellar/qt/5.15.0/)
            endif()
        else ()
            if (EXISTS /usr/local/qt/5.15.0/)
                set(CMAKE_PREFIX_PATH /usr/local/qt/5.15.0/)
            endif()
        endif()
    else()
        if (EXISTS "C:\\Qt\\5.12.5\\msvc2017_64")
            set(CMAKE_PREFIX_PATH "C:\\Qt\\5.12.5\\msvc2017_64")
        endif()
    endif()
endif()
if(NOT CMAKE_PREFIX_PATH AND NOT Qt5Widgets_DIR)
    message("CMAKE_PREFIX_PATH is not defined, so find_package(Qt5) may not work. Set the CMAKE_PREFIX_PATH "
            "environment variable to the install prefix of Qt 5, either on the command line as "
            "-DCMAKE_PREFIX_PATH=\"path/to/Qt5/lib/cmake\" or with set(CMAKE_PREFIX_PATH path/to/Qt5/lib/cmake)")
else()
    find_package(Qt5 COMPONENTS Widgets REQUIRED)
    if (NOT Qt5_FOUND)
        return()
    endif()
    add_executable(qt_helloworld qt_hello.cpp)
    target_link_libraries(qt_helloworld Qt5::Widgets)

    add_executable(qt_helloworld_on_thread qt_hello_on_thread.cpp)
    target_link_libraries(qt_helloworld_on_thread Qt5::Widgets)
endif(NOT CMAKE_PREFIX_PATH AND NOT Qt5Widgets_DIR)
set(CMAKE_AUTOMOC OFF)
set(CMAKE_AUTORCC OFF)
set(CMAKE_AUTOUIC OFF)